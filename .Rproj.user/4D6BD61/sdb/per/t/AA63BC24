{
    "collab_server" : "",
    "contents" : "## MyPlots.R ##\n\n\nfunction.MyPlotSpeedBins<-function(pac){\n  renderPlotly({\n    #Plot of aggregation by SpeedBins\n    plot_ly(pac, x = ~Index, y = ~SP1 , name = 'Number of cars in time aggregated')%>%\n      add_trace(y = ~SP1, name = '0-50km/h', mode = 'lines') %>%\n      add_trace(y = ~SP2, name = '50-60km/h', mode = 'lines') %>%\n      add_trace(y = ~SP3, name = '60-70km/h', mode = 'lines') %>%\n      add_trace(y = ~SP4, name = '70-80km/h', mode = 'lines') %>%\n      add_trace(y = ~SP5, name = '80-90km/h', mode = 'lines') %>%\n      add_trace(y = ~SP6, name = '90-100km/h', mode = 'lines') %>%\n      add_trace(y = ~SP7, name = '100-110km/h', mode = 'lines') %>%\n      add_trace(y = ~SP8, name = '110-120km/h', mode = 'lines') %>%\n      add_trace(y = ~SP9, name = '120-130km/h', mode = 'lines') %>%\n      add_trace(y = ~SP10, name = '130-140km/h', mode = 'lines') %>%\n      add_trace(y = ~SP11, name = '140-150km/h', mode = 'lines') %>%\n      add_trace(y = ~SP12, name = '150-160km/h', mode = 'lines') %>%\n      add_trace(y = ~SP13, name = '160-180km/h', mode = 'lines')%>%\n      add_trace(y = ~SP14, name = '180-999km/h', mode = 'lines')%>%\n      add_trace(y = ~SUM, name = 'TOTAL', mode = 'lines')\n    \n  })\n}\n\nfunction.MyPlotLengthBins<-function(pac){\n  renderPlotly({\n    #Plot of aggregation by LengthBins\n    plot_ly(pac, x = ~Index, y = ~LN1 , name = 'Number of cars in time aggregated')%>%\n      add_trace(y = ~LN1, name = '0-300 cm', mode = 'lines') %>%\n      add_trace(y = ~LN2, name = '300-470 cm', mode = 'lines') %>%\n      add_trace(y = ~LN3, name = '470-550 cm', mode = 'lines') %>%\n      add_trace(y = ~LN4, name = '550-600 cm', mode = 'lines') %>%\n      add_trace(y = ~LN5, name = '600-1300 cm', mode = 'lines') %>%\n      add_trace(y = ~LN6, name = '1300-1800 cm', mode = 'lines') %>%\n      add_trace(y = ~LN7, name = '1800-2550 cm', mode = 'lines') %>%\n      add_trace(y = ~LN8, name = '2550-3600 cm', mode = 'lines') %>%\n      add_trace(y = ~LN9, name = '3600-9999 cm', mode = 'lines') \n  })\n  \n}\n\nfunction.MyPlotWeightBins<-function(pac){\n  renderPlotly({\n    #Plot of aggregation by WeigthBins\n    plot_ly(data1, x = ~Date, y = ~CS1 , name = 'Number of cars in time aggregated')%>%\n      add_trace(y = ~CS1, name = '0-2000 kg', mode = 'lines') %>%\n      add_trace(y = ~CS2, name = '2000-3501 kg', mode = 'lines') %>%\n      add_trace(y = ~CS3, name = '3501-7497 kg', mode = 'lines') %>%\n      add_trace(y = ~CS4, name = '7497-12002 kg', mode = 'lines') %>%\n      add_trace(y = ~CS5, name = '12002-17998  kg', mode = 'lines') %>%\n      add_trace(y = ~CS6, name = '17998-23999  kg', mode = 'lines') \n  })\n}\n\nfunction.MyBoxPlot1<-function(pac){\n  renderPlotly({\n  #boxplot\n    plot_ly(pac,y = ~SP1, name = '0-50km/h',type = 'box')%>%\n      add_trace(y = ~SP2, name = '50-60km/h', mode = 'lines') %>%\n      add_trace(y = ~SP3, name = '60-70km/h', mode = 'lines') %>%\n      add_trace(y = ~SP4, name = '70-80km/h', mode = 'lines') %>%\n      add_trace(y = ~SP5, name = '80-90km/h', mode = 'lines') %>%\n      add_trace(y = ~SP6, name = '90-100km/h', mode = 'lines') %>%\n      add_trace(y = ~SP7, name = '100-110km/h', mode = 'lines') %>%\n      add_trace(y = ~SP8, name = '110-120km/h', mode = 'lines') %>%\n      add_trace(y = ~SP9, name = '120-130km/h', mode = 'lines') %>%\n      add_trace(y = ~SP10, name = '130-140km/h', mode = 'lines') %>%\n      add_trace(y = ~SP11, name = '140-150km/h', mode = 'lines') %>%\n      add_trace(y = ~SP12, name = '150-160km/h', mode = 'lines') %>%\n      add_trace(y = ~SP13, name = '160-180km/h', mode = 'lines')%>%\n      add_trace(y = ~SP14, name = '180-999km/h', mode = 'lines')%>%\n      layout(title = \"Boxplot by day of week\")\n})\n  \n}\nfunction.MyBoxPlot2<-function(pac,x,y,color){\n  renderPlotly({ \n    \n   plot_ly(pac,x = ~get(x),y = ~get(y), color = ~get(color),type = \"box\")%>%\n      layout(boxmode = \"group\")\n    # plot_ly(pac,x = ~SUM,y = ~SP11, color = pac['wday.lbl'],type = \"box\")%>%\n    #      layout(boxmode = \"group\")\n  })\n  \n}\n\nfunction.MyAnomalyDetection<-function(pac,myX,myY,Myperiod,MylastOnly){\n  #==================================Anomaly detection=======================================\n  \n  View(c(myX,myY,Myperiod,MylastOnly,0))\n  #SUM_DATA <- pac[,c(1,12)]\n  \n  myX<-paste0(myX)\n  myY<-paste0(myY)\n  Myperiod<-2\n  MylastOnly<-FALSE\n  SUM_DATA <- pac[,c(grep(paste0(myX),colnames(pac)),grep(paste0(myY), colnames(pac)))]\n  #View(SUM_DATA)\n  View(c(myX,myY,Myperiod,MylastOnly,1))\n  abc <- as.numeric(rownames(SUM_DATA))\n  ggplot(pac, aes(x=myX, y=myY)) + geom_line()\n  \n  #ggplot(pac, aes(x=Index, y=SP11)) + geom_line()\n  #res = AnomalyDetectionTs(SUM_DATA, max_anoms=0.01, direction=\"pos\", plot=TRUE, e_value = T)\n  #res = AnomalyDetectionVec(SUM_DATA[,2], max_anoms=0.01, period=96, direction='both',\n  #                          only_last=FALSE, plot=TRUE)\n  #View(SUM_DATA)\n  \n  res = AnomalyDetectionVec(SUM_DATA[,2], max_anoms=0.01, period=Myperiod, direction='both',\n                            only_last=MylastOnly, plot=TRUE)\n  anomaly_table=res$anoms\n  \n  #SUM_DATA$Index_row <- abc\n  \n  SUM_DATA[[paste0(myX,\"_row\")]] <- abc\n  \n  #anomaly_table<-merge(SUM_DATA,anomaly_table,by.x = \"Index_row\",by.y = \"index\")\n  View(anomaly_table)\n  View(SUM_DATA)\n  View(c(dim(anomaly_table)))\n  if(is.null(anomaly_table)){\n    anomaly_table<-anomaly_table\n  }else{\n    anomaly_table<-\n      \n                    tryCatch({\n                                merge(SUM_DATA,anomaly_table,by.x = paste0(myX,\"_row\"),by.y = \"index\")\n                                \n                                },error=function(cond){\n                                  message(\"Error in anomaly_table\")\n                                  anomaly_table\n                                  \n                                },warning=function(cond){\n                                  message(\"Warning in anomaly_table\")\n                                  anomaly_table\n                                },finally={\n                                  message(\"Warning of anomaly_table\")\n                              }\n                    )\n  }\n  \n  renderPlotly({\n  plot_ly(SUM_DATA, x = ~get(myX), y = ~get(myY))%>%\n    add_trace(colors = \"orange\",name = \"Po?etnos? ?ut v ?ase\",mode = \"lines\")%>%\n    add_trace(y = ~anoms, colors = \"gray\",name = \"Anom?lie\", mode = \"markers\", alpha = 1,data = anomaly_table)%>%\n    layout(title = \"Graf\",\n           xaxis = list(title = \"Čas\",\n                        rangeslider = list(type = \"date\")),\n           yaxis = list(title = \"Početnosť áut\"))\n  })\n}",
    "created" : 1522654286488.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1397997877",
    "id" : "AA63BC24",
    "lastKnownWriteTime" : 1522742190,
    "last_content_update" : 1522742190693,
    "path" : "~/fiverr/Rshiny/MyPlots.R",
    "project_path" : "MyPlots.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}