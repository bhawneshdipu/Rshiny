{
    "collab_server" : "",
    "contents" : "## Lib.R ##\n\nlibrary(DT)\nlibrary(readr)\nlibrary(plotly)\nlibrary(stringr)\nlibrary(DataLoader)\nlibrary(forecast)\nlibrary(tseries)\nlibrary(zoo)\nlibrary(xts)\nlibrary(fts)\nlibrary(MASS)\nlibrary(caret)\nlibrary(e1071)\nlibrary(dplyr)\nlibrary(h2o)        # Awesome ML Library\nlibrary(timetk)     # Toolkit for working with time series in R\nlibrary(tidyquant)\nlibrary(anomalyDetection)\nlibrary(TSMining)\nlibrary(randomForest)\n#install.packages(\"devtools\")\n#devtools::install_github(\"twitter/AnomalyDetection\")\nlibrary(AnomalyDetection)\npackageVersion('plotly')\n#devtools::install_github(\"tidyverse/ggplot2\")\n#devtools::install_github('hadley/ggplot2')\nlibrary(ggplot2)\n\n\n\n\n## Machine Learning ##\n\n\n#====================================timetk + h2o: MAPE = 3.9% (This demo)==================================\n\n\n\n\n\n#beer_sales_tbl <- tq_get(\"S4248SM144NCEN\", get = \"economic.data\", from = \"2010-01-01\", to = \"2017-10-27\")\n\nSUM_DATA <- pac[,c(1,31)]\n\nSUM_DATA %>% glimpse()\nbeer_sales_tbl_aug <- SUM_DATA %>%\n  tk_augment_timeseries_signature()\n\nbeer_sales_tbl_aug %>% glimpse()\n\nbeer_sales_tbl_clean <- beer_sales_tbl_aug %>%\n  select_if(~ !is.POSIXct(.)) %>%\n  select_if(~ !any(is.na(.))) %>%\n  mutate_if(is.ordered, ~ as.character(.) %>% as.factor)\n\nbeer_sales_tbl_clean %>% glimpse()\nbeer_sales_tbl_clean[,1] <- as.integer(beer_sales_tbl_clean$SUM)\n#beer_sales_tbl_clean$month.lbl <- NULL\n#beer_sales_tbl_clean$wday.lbl <- NULL\nsplit <- round(nrow(beer_sales_tbl_clean) * .70)\ndatat_to <- beer_sales_tbl_clean[1:split,]\nactuals_tbl <- beer_sales_tbl_clean[(split + 1):nrow(beer_sales_tbl_clean),]\nsplit2 <- round(nrow(actuals_tbl) * .66)\ndata_beet <- actuals_tbl[1:split2,]\ndata_end <- actuals_tbl[(split2 + 1):nrow(actuals_tbl),]\n\n\n\ntrain_tbl <- datat_to\nvalid_tbl <- data_beet\ntest_tbl  <- data_end\n\n\nh2o.init()\n#h2o.no_progress()\ntrain_h2o <- as.h2o(train_tbl)\nvalid_h2o <- as.h2o(valid_tbl)\ntest_h2o  <- as.h2o(test_tbl)\n\ny <- \"SUM\"\nx <- setdiff(names(train_h2o), y)\n\n# linear regression model used, but can use any model\nautoml_models_h2o <- h2o.automl(\n  x = x, \n  y = y, \n  training_frame = train_h2o, \n  validation_frame = valid_h2o, \n  leaderboard_frame = test_h2o, \n  max_runtime_secs = 60, \n  stopping_metric = \"deviance\")\n\nautoml_leader <- automl_models_h2o@leader\n\npred_h2o <- h2o.predict(automl_leader, newdata = test_h2o)\n\nh2o.performance(automl_leader, newdata = test_h2o)\n\n\n\n\nerror_tbl <- SUM_DATA %>% \n  tail(SUM_DATA,n=sum(nrow(data_end)))%>% \n  add_column(pred = pred_h2o %>% as.tibble() %>% pull(predict)) %>%\n  rename(actual = SUM) %>%\n  mutate(\n    error     = actual - pred,\n    error_pct = error / actual\n  ) \nerror_tbl\n\n\nerror_tbl %>%\n  summarise(\n    me   = mean(error),\n    rmse = mean(error^2)^0.5,\n    mae  = mean(abs(error)),\n    mape = mean(abs(error_pct)),\n    mpe  = mean(error_pct)\n  ) %>%\n  glimpse()\n\n\n\n\n\n\np<-SUM_DATA %>%\n  ggplot(aes(x = Index, y = SUM)) +\n  # Data - Spooky Orange\n  geom_point(size = 2, color = \"gray\", alpha = 0.5, shape = 21, fill = \"orange\") +\n  geom_line(color = \"orange\", size = 0.5) +\n  geom_ma(n = 1, color = \"black\")+ \n  # Predictions - Spooky Purple\n  geom_point(aes(y = pred), size = 2, color = \"gray\", alpha = 1, shape = 21, fill = \"purple\", data = error_tbl) +\n  geom_line(aes(y = pred), color = \"purple\", size = 0.5, data = error_tbl) +\n  # Aesthetics\n  \n  labs(\n    title = \"Graf\",\n    subtitle = \"Algotimus H2O mal najvyššiu prestnosť MAPE:9,6%\"\n  )\nggplotly(p)\n\nplot_ly(SUM_DATA, x = ~Index, y = ~SUM)%>%\n  add_trace(colors = \"orange\",name = \"Početnosť áut v čase\",mode = \"lines\")%>%\n  add_trace(y = ~pred, colors = \"gray\",name = \"Predikované hodnoty\", mode = \"lines+markers\", alpha = 1,data = error_tbl)%>%\n  layout(title = \"Graf\",\n         xaxis = list(title = \"Čas\",\n                      rangeslider = list(type = \"date\")),\n         yaxis = list(title = \"Početnosť áut\"))\n\n\n\n\n\n",
    "created" : 1522993600369.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2689665600",
    "id" : "BBA3FF23",
    "lastKnownWriteTime" : 1522993845,
    "last_content_update" : 1522993845338,
    "path" : "~/fiverr/Rshiny/MachineLearning.R",
    "project_path" : "MachineLearning.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}